generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int           @id @default(autoincrement())
  email       String        @unique
  password    String
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Account     Account[]
  Category    Category[]
  Transaction Transaction[]
  Budget      Budget[]
}

enum AccountType {
  BANK
  CREDIT_CARD
}

model Account {
  id             Int           @id @default(autoincrement())
  name           String
  type           AccountType
  initialBalance Float         @default(0.0)
  userId         Int
  user           User          @relation(fields: [userId], references: [id])
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  Transaction    Transaction[]
}

model Category {
  id          Int           @id @default(autoincrement())
  name        String
  userId      Int
  user        User          @relation(fields: [userId], references: [id])
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  Transaction Transaction[]
  Budget      Budget[]

  @@unique([userId, name])
}

enum TransactionType {
  INFLOW
  OUTFLOW
}

model Transaction {
  id          Int            @id @default(autoincrement())
  amount      Float
  type        TransactionType
  description String
  date        DateTime
  userId      Int
  user        User           @relation(fields: [userId], references: [id])
  categoryId  Int
  category    Category       @relation(fields: [categoryId], references: [id])
  accountId   Int
  account     Account        @relation(fields: [accountId], references: [id])
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Budget {
  id         Int      @id @default(autoincrement())
  amount     Float
  date       DateTime
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([userId, categoryId, date])
}
